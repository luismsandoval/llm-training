from flask import Flask, request, jsonify
from flask_cors import CORS
import os
import json

app = Flask(__name__)
CORS(app)  # Enable CORS for all routes

@app.route('/api/health', methods=['GET'])
def health_check():
    """Health check endpoint to verify the API is running."""
    return jsonify({"status": "ok", "message": "API is running"})

@app.route('/api/datasets', methods=['GET'])
def list_datasets():
    """List available datasets."""
    # This is a placeholder. In a real implementation, we would scan the data directory.
    datasets = [
        {"id": "sample1", "name": "Sample Dataset 1", "size": "10MB", "records": 1000},
        {"id": "sample2", "name": "Sample Dataset 2", "size": "20MB", "records": 2000}
    ]
    return jsonify(datasets)

@app.route('/api/models', methods=['GET'])
def list_models():
    """List available model architectures."""
    # This is a placeholder. In a real implementation, we would list available model architectures.
    models = [
        {"id": "gpt2", "name": "GPT-2", "parameters": "124M", "description": "A small GPT-2 model"},
        {"id": "bert", "name": "BERT", "parameters": "110M", "description": "A BERT base model"}
    ]
    return jsonify(models)

@app.route('/api/train', methods=['POST'])
def start_training():
    """Start training a model with the given configuration."""
    config = request.json
    # This is a placeholder. In a real implementation, we would start the training process.
    return jsonify({
        "status": "started",
        "job_id": "job123",
        "config": config
    })

@app.route('/api/train/<job_id>/status', methods=['GET'])
def training_status(job_id):
    """Get the status of a training job."""
    # This is a placeholder. In a real implementation, we would check the status of the training job.
    return jsonify({
        "job_id": job_id,
        "status": "running",
        "progress": 0.5,
        "metrics": {
            "loss": 2.3,
            "accuracy": 0.85
        }
    })

@app.route('/api/generate', methods=['POST'])
def generate_text():
    """Generate text using a trained model."""
    config = request.json
    # This is a placeholder. In a real implementation, we would generate text using the model.
    return jsonify({
        "text": "This is a sample generated text. In a real implementation, this would be generated by the model."
    })

if __name__ == '__main__':
    app.run(debug=True, port=5000) 
